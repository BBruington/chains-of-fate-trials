
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

generator zod {
  provider       = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model PuzzleSession {
  id                String     @default(cuid()) @id
  title             String
  durationSeconds   Int      @default(0)
  createdAt         DateTime @default(now())
  chat              PuzzleChatMessage[]
  players           User[]
  puzzles           Puzzle[]
}

model PuzzleChatMessage {
  id         String   @id @default(cuid())
  sessionId  String
  username   String
  message    String
  createdAt  DateTime @default(now())
  session    PuzzleSession @relation(fields: [sessionId], references: [id])
}

model Puzzle {
  id          String @default(cuid()) @id
  checkpoint  Int @default(1)
  title       String
  description String?
  solved      Boolean
  data        Json
  typeId      String
  type        PuzzleType @relation(fields: [typeId], references: [id])
  session     PuzzleSession[]
}

model PuzzleType {
  name String
  id   String @default(cuid()) @id
  puzzles Puzzle[]
}

model User {
  id                String    @default(cuid()) @id
  clerkId           String    @unique
  imgUrl            String?
  username          String?   
  email             String?   @unique
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  puzzleSessions    PuzzleSession[]
  Ingredients       Ingredient[]
  Potions           Potion[]
  Formulas          Formula[]
  @@map(name: "users")
}

model Formula {
  id String @default(cuid()) @id
  userId String
  name String
  description String
  rarity Rarity @default(COMMON)
  ingredient1 String?
  ingredient2 String?
  ingredient3 String?
  ingredient4 String?
  user User @relation(fields: [userId], references: [clerkId])
}

model Ingredient {
  id                String    @default(cuid()) @id  
  rarity  Rarity @default(COMMON)
  type    MagicType @default(PRIMAL)
  primaryAttribute   PrimaryAttribute @default(ABJURATION)
  name String @unique
  description String
  quantity   Int @default(1) 
  abjuration Int @default(0)
  conjuration Int @default(0)
  divination Int @default(0)
  enchantment Int @default(0)
  evocation Int @default(0)
  illusion Int @default(0)
  necromancy Int @default(0)
  transmutation Int @default(0)
  userId   String
  User   User @relation(fields: [userId], references: [clerkId])
}

model Potion {
  id                String    @default(cuid()) @id  
  rarity  Rarity @default(COMMON)
  type    MagicType @default(ARCANE)
  primaryAttribute   PrimaryAttribute
  name String
  description String
  quantity   Int @default(1)
  abjuration Int @default(0)
  conjuration Int @default(0)
  divination Int @default(0)
  enchantment Int @default(0)
  evocation Int @default(0)
  illusion Int @default(0)
  necromancy Int @default(0)
  transmutation Int @default(0)
  userId   String
  User   User @relation(fields: [userId], references: [clerkId])
}

enum MagicType {
  EMPTY
  ARCANE
  PRIMAL
  DIVINE
  OCCULT
}

enum Rarity {
  EMPTY
  COMMON
  UNCOMMON
  RARE
  VERYRARE
  LEGENDARY
}

enum PrimaryAttribute {
  EMPTY
  ABJURATION
  CONJURATION
  DIVINATION
  ENCHANTMENT
  EVOCATION
  ILLUSION
  NECROMANCY
  TRANSMUTATION
}